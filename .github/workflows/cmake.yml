name: CMake

on: [ push ]

env:
  BUILD_TYPE: RelWithDebInfo

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build_x86

      # Restore from cache the previously built ports. If cache-miss, download, build vcpkg.
      - name: Restore from cache and install vcpkg
        # Download and build vcpkg, without installing any port. If content is cached already, it is a no-op.
        uses: lukka/run-vcpkg@v5
        with:
          setupOnly: true
          vcpkgGitCommitId: 6a19c0f10a9a76440aade27c5b6015a55a149528

      # Now that vcpkg is installed, it is being used to run desired arguments.
      - run: |
          $VCPKG_ROOT/vcpkg install @response_file.txt
        shell: bash

      - name: Configure CMake x86
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{runner.workspace}}/build_x86
        # Note the current convention is to use the -S and -B options here to specify source
        # and build directories, but this is only available with CMake 3.13 and higher.
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: cmake $GITHUB_WORKSPACE
          -DCMAKE_BUILD_TYPE=$BUILD_TYPE
          -DCMAKE_TOOLCHAIN_FILE=$GITHUB_WORKSPACE\\vcpkg\\scripts\\buildsystems\\vcpkg.cmake
          -DVCPKG_TARGET_TRIPLET=x86-windows-static 
          -A Win32

      - name: Build x86
        working-directory: ${{runner.workspace}}/build_x86
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake --build . --config $BUILD_TYPE --target remix_compat

      - name: Artifacts GTA SA
        uses: actions/upload-artifact@v2
        with:
          name: gtasa_rh
          path: ${{runner.workspace}}/build_x86/remix_compat/RelWithDebInfo
